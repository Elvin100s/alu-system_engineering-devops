#!/usr/bin/env bash
# Configures Nginx to run as nginx user on port 8080

# 1. Stop any running Nginx and free port 8080
nginx -s stop 2>/dev/null || true
pkill -9 nginx 2>/dev/null || true
fuser -k 8080/tcp 2>/dev/null || true

# 2. Create required directories
mkdir -p /var/cache/nginx /var/log/nginx /var/www/html
echo "Nginx is working" > /var/www/html/index.html

# 3. Create nginx user if it doesn't exist
if ! id -u nginx &>/dev/null; then
    useradd --system --no-create-home nginx
fi

# 4. Configure Nginx
cat > /etc/nginx/nginx.conf <<'EOF'
user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    server {
        listen 8080;
        listen [::]:8080;
        server_name localhost;
        
        location / {
            root /var/www/html;
            index index.html;
        }
    }
}
EOF

# 5. Set proper permissions
chown -R nginx:nginx /var/cache/nginx /var/log/nginx /var/www/html
chmod -R 755 /var/cache/nginx /var/log/nginx /var/www/html

# 6. Start Nginx
if nginx -t; then
    nginx
else
    echo "Nginx configuration test failed" >&2
    exit 1
fi

# 7. Verification
echo -e "\n=== Verification ==="
echo "1. Process check:"
if pgrep -u nginx nginx >/dev/null; then
    echo "✓ Nginx is running as nginx user"
else
    echo "✗ Nginx is NOT running as nginx user" >&2
    exit 1
fi

echo "2. Port check:"
if ss -tulnp | grep -q ':8080'; then
    echo "✓ Nginx is listening on port 8080"
else
    echo "✗ Nginx is NOT listening on port 8080" >&2
    exit 1
fi

echo "3. HTTP check:"
if curl -s localhost:8080 | grep -q "Nginx is working"; then
    echo "✓ Nginx is serving content correctly"
else
    echo "✗ Nginx is NOT serving content correctly" >&2
    exit 1
fi
